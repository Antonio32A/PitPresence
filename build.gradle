buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT"
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.4"
    }
}

apply plugin: "java"
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "com.github.johnrengelman.shadow"

version = "1.1"
group= "tech.antonio32a"
archivesBaseName = "PitPresence"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = "UTF-8"

sourceSets {
    main {
        output.resourcesDir = java.outputDir
    }
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
}

repositories {
    maven { url "https://jitpack.io" }
    mavenCentral()
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    embed("com.github.jagrosh:DiscordIPC:e29d6d8") {
        exclude module: "log4j"
    }
    provided files("libs/modcore.jar")

    compileOnly "org.projectlombok:lombok:1.18.16"
    annotationProcessor "org.projectlombok:lombok:1.18.16"
    testCompileOnly "org.projectlombok:lombok:1.18.16"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.16"
}

jar {
    archiveName = "pitpresence-${version}.jar"
    enabled = false
}

shadowJar {
    archiveName = tasks.jar.archiveName
    classifier = ""
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest.attributes(
            "FMLCorePluginContainsFMLMod": true,
            "ForceLoadAsMod": true,
            "ModSide": "CLIENT",
            "FMLCorePlugin": "tech.antonio32a.pitpresence.forge.FMLLoadingPlugin"
    )

    exclude("dummyThing")
    exclude("META-INF/maven/")
    exclude("META-INF/nar/")
    exclude("module-info.class")
    exclude("META-INF/versions/")

    configurations = [project.configurations.embed]
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version":project.version, "mcversion":project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }

    from(file("LICENSE"))
}

reobfJar.dependsOn tasks.shadowJar
